@model IEnumerable<MovieExplorer.Models.ViewModels.MovieListViewModel>

@{
	ViewData["Title"] = "Latest Movies";
}
@if(!Model.Any()){
	<p> No movies found!</p>
}
else
{
<h1>Latest Movies</h1>
<div class="row">
        <div class="row" id="latest-movies">
            @await Html.PartialAsync("_MovieListPartial", Model)
        </div>
        <div class="text-center mt-4">
            <button id="load-more-latest" class="btn btn-secondary btn-lg btn-wide" data-page="@ViewBag.CurrentPage">Load More</button>
        </div>
</div>
}
@section Scripts {
    <script>
        document.getElementById("load-more-latest").addEventListener("click", async function () {
            const button = this;
            const page = parseInt(button.getAttribute("data-page")) + 1;
            history.pushState({ page: page }, "", `/Movies/Latest?page=${page}`);
            const response = await fetch(`/Home/LoadMoreLatestMovies?page=${page}`);
            const html = await response.text();
            document.getElementById("latest-movies").insertAdjacentHTML("beforeend", html);
            button.setAttribute("data-page", page);
        });
        window.addEventListener("popstate", async function (event) {
            const page = event.state?.page || 1;
            const response = await fetch(`/Home/LoadMoreLatestMovies?page=${page}`);
            const html = await response.text();
            document.getElementById("latest-movies").innerHTML = html;
            document.getElementById("load-more-latest").setAttribute("data-page", page);
        });
    </script>
}
